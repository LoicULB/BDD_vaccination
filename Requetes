----Requete 1 -----


SELECT distinct p.nom 
FROM pays p JOIN stats_journalieres sj ON p.iso=sj.iso_pays JOIN hospitalisations_stats hs ON hs.id=sj.id
WHERE hs.hosp_patiens >= 5000

---Requete 2 ---- 

WITH sum_vacc_for_each_pays(iso,nom, somme ) AS (
	SELECT distinct p.iso, p.nom ,SUM(vs.vaccinations)
	FROM pays p 
	JOIN stats_journalieres sj ON p.iso = sj.iso_pays 
	JOIN vaccinnations_stats vs ON vs.id=sj.id 
	GROUP BY p.nom, p.iso
)
select iso,nom, somme
from sum_vacc_for_each_pays maxi
WHERE somme is not null
ORDER BY somme DESC limit 1


---Requete 3----- 

SELECT distinct cv.nom_vaccin, p.iso, p.nom
FROM pays p JOIN campagne_vaccin cv ON p.iso=cv.iso_pays 
GROUP BY cv.nom_vaccin, p.iso, p.nom
order by cv.nom_vaccin --should use p.iso cause some countries without name

---Requete 4---- 
SELECT p.iso, p.nom, (( hs.hosp_patiens::float/ p.population )*100)::numeric(36,2) as pourcentage
FROM hospitalisations_stats hs JOIN stats_journalieres sj ON sj.id = hs.id JOIN pays p ON p.iso= sj.iso_pays
WHERE sj.date = '01/01/2021'
Group by p.iso, p.population, hs.hosp_patiens, p.nom
--only show country where ther is a stat

---Requete 5----

--return null where there is no previous date to compare 
SELECT p.iso, p.nom, sj.date, hs.hosp_patiens - LAG(hs.hosp_patiens)OVER (PARTITION BY p.iso ORDER BY sj.date) evolution
FROM hospitalisations_stats hs JOIN stats_journalieres sj on sj.id = hs.id join pays p on p.iso = sj.iso_pays
Group by p.iso, p.nom, sj.date,  hs.hosp_patiens
order by p.iso, sj.date

---Requete 6---
SELECT cv.nom_vaccin 
FROM campagne_vaccin cv 
WHERE iso_pays = 'BEL' 
INTERSECT
SELECT cv.nom_vaccin
FROM campagne_vaccin cv 
WHERE iso_pays = 'FRA'


select p.iso, sj.date,  hs.hosp_patiens
from stats_journalieres sj join hospitalisations_stats hs on sj.id = hs.id join pays p on sj.iso_pays = p.iso